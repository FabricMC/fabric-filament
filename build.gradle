import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
	id 'java-library'
	id 'java-gradle-plugin'
	id 'maven-publish'
	id 'checkstyle'
}

def ENV = System.getenv()

group = 'net.fabricmc'
version = '0.4.0-beta.1' + (ENV.GITHUB_ACTIONS ? "" : "+local")

java {
	sourceCompatibility = JavaVersion.VERSION_16
	targetCompatibility = JavaVersion.VERSION_16

	withSourcesJar()
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
	options.release = 16
}

File generatedTestResources = new File(buildDir, 'generatedTestResources')

sourceSets {
	test.resources.srcDir generatedTestResources
	testData
}

repositories {
	mavenCentral()

	maven {
		name = 'Fabric'
		url = 'https://maven.fabricmc.net'
	}
}

dependencies {
	implementation gradleApi()

	implementation "org.ow2.asm:asm:$project.asm_version"
	implementation "org.ow2.asm:asm-tree:$project.asm_version"
	implementation "cuchaz:enigma:$project.enigma_version"
	implementation "net.fabricmc.unpick:unpick:$project.unpick_version"
	implementation "net.fabricmc.unpick:unpick-format-utils:$project.unpick_version"
	implementation "net.fabricmc:tiny-mappings-parser:$project.tiny_mappings_parser_version"

	testImplementation platform("org.junit:junit-bom:$project.junit_version")
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation "org.assertj:assertj-core:$project.assertj_version"
}

gradlePlugin {
	plugins {
		filament {
			id = 'net.fabricmc.filament'
			implementationClass = 'net.fabricmc.filament.FilamentGradlePlugin'
		}
	}
}

test {
	useJUnitPlatform()

	testLogging {
		exceptionFormat = TestExceptionFormat.FULL
	}
}

task cleanTestData(type: Delete) {
	// Delete the generated test resources to make sure file paths etc haven't changed
	delete generatedTestResources
}

task testDataJar(type: Jar) {
	dependsOn testDataClasses, cleanTestData
	group = 'build'
	destinationDirectory = new File(generatedTestResources, 'projects/sharedData')
	archiveFileName = 'test-data.jar'

	from sourceSets.testData.output
}

processTestResources {
	dependsOn testDataJar
}

checkstyle {
	configFile = file('checkstyle.xml')
	toolVersion = '8.41.1'
}

publishing {
	repositories {
		if (ENV.MAVEN_URL) {
			repositories.maven {
				name "fabric"
				url ENV.MAVEN_URL
				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		}
	}
}
